var tipuesearch = {"pages": [
     {"title": "AppIRouteInterface", "text": "   ", "tags": "", "url": "AppIRouteInterface.html"},
     {"title": "AppTCustomHTTPModule", "text": "   ", "tags": "", "url": "AppTCustomHTTPModule.html"},
     {"title": "AppTRouterObject", "text": "     O projeto AppTRouterObject demonstra o uso das units fphttpapp, fpcgi e inifiles .       DESCRIÇÃO      Este programa demonstra o uso dos parâmetros de chamada em um link do browser nos quais podem ser:      http://localhost:8080/simple;   http://localhost:8080/component/1;   http://localhost:8080/component/2;   http://localhost:8080/onepath/:param;   http://localhost:8080/twopaths/:param1/:param2;   http://localhost:8080/onepath/*path/new;   http://localhost:8080/routed/object;   http://localhost:8080/*path.         NOTAS      Este projeto pode ser usado como servidor http porta 8080 ou um aplicação CGI para ser registrada em um servidor web.      REFERÊNCIAS      https://objectpascalprogramming.com/fpweb-hello      CÓDIGO FONTE:      AppTRouterObject.lpr      HISTÓRICO      Documento criado por: paulosspacheco@yahoo.com.br      23/03/2023 : Inicio da documentação deste código               ", "tags": "", "url": "AppTRouterObject.html"},
     {"title": "routes", "text": "     A Unit routes implementa a classe TMyHandler filha de THTTPRoute.       DESCRIÇÃO      A Unit routes implementa a classe TMyHandler filha de THTTPRoute para demonstrar o uso de objetos sendo executado pelo browser.   A Unit routes demonstra como criar rotiamento usando o método HTTPRouter.RegisterRoute      REFERÊNCIAS      [fcl-web](https://wiki.freepascal.org/fcl-web)      CÓDIGO FONTE:      routes.pas      HISTÓRICO      Documento criado por: paulosspacheco@yahoo.com.br      23/03/2023 : Inicio da documentação deste código               ", "tags": "", "url": "routes.html"},
     {"title": "routes.TMyHandler", "text": "A class TMyHandler publica o objeto TMyHandler       DESCRIÇÃO:      A classe TMyHandler implemnta o método TRouteObject.HandleRequest()* para executar a procedure RequestToResponse('Route object',ARequest,AResponse).      REFERÊNCIAS fpWeb Tutorial;      ", "tags": "", "url": "routes.TMyHandler.html"},
     {"title": "routes.TMyHandler.HandleRequest", "text": "O método HandleRequest é um método abstrato que obrigatóriomente precisa ser anulado para que se possa executar o que se deseja.       DESCRIÇÃO:      Neste exemplo é executado a procedure RequestToResponse('Route object',ARequest,AResponse);      PARÂMETROS      ARequest      Contém informações vinda do Browser;      aResponse      Contém informações enviadas para o Browser;           EXEMPLO DE USO:      Registro do objeto TMyHandler:      HTTPRouter.RegisterRoute('/routed/object',rmall,TMyHandler);      Chamada do método TMyHandler.HandleRequest()      http://localhost:8080/routed/object/                ", "tags": "", "url": "routes.TMyHandler.html#HandleRequest"},
     {"title": "routes.RegisterRoutes", "text": "    ", "tags": "", "url": "routes.html#RegisterRoutes"},
     {"title": "routes.DumpRoutes", "text": "A procedure DumpRoutes adiciona na lista L os link das rotas registradas    ", "tags": "", "url": "routes.html#DumpRoutes"},
     {"title": "routes.RequestToResponse", "text": "A procedure RequestToResponse envia para o Browser um página HTML prenchida com os parametros passados por: RouteParams    ", "tags": "", "url": "routes.html#RequestToResponse"},
     {"title": "routes.RequestToResponse", "text": "    ", "tags": "", "url": "routes.html#RequestToResponse"},
     {"title": "routes.SimpleCallBack", "text": "A procedure SimpleCallBack implementa a rota Simple callback :       DESCRIÇÃO:      Executa a procedure RequestToResponse('Simple callback',ARequest,AResponse);      PARÂMETROS      ARequest      Contém informações vinda do Browser;      aResponse      Contém informações enviadas para o Browser;           EXEMPLO DE USO:      Registro da rota /simple/:      HTTPRouter.RegisterRoute('simple',rmall,@SimpleCallBack);      Chamada do método TMyHandler.HandleRequest()      http://localhost:8080/simple/                ", "tags": "", "url": "routes.html#SimpleCallBack"},
     {"title": "routes.ParamPathMiddle", "text": "    ", "tags": "", "url": "routes.html#ParamPathMiddle"},
     {"title": "routes.ParamPath", "text": "    ", "tags": "", "url": "routes.html#ParamPath"},
     {"title": "routes.ParamPaths2", "text": "    ", "tags": "", "url": "routes.html#ParamPaths2"},
     {"title": "routes.ComponentPath", "text": "    ", "tags": "", "url": "routes.html#ComponentPath"},
     {"title": "routes.DefaultCallBack", "text": "A procedure DefaultCallBack é executado pelo browser quando o link não tem parâmetro       DESCRIÇÃO:      A rota '*path' pegará todos os outros caminhos, ou seja: Se não informar uma rota o sistema não gera exceção.      EXEMPLO DE USO:      Registro da rota:      HTTPRouter.RegisterRoute('*path',rmall,@DefaultCallBack,IsDefault=True);      Nota:      Como o parâmetro IsDefault = true essa chamada deve executada após todos os registros das rotas da unit.            Chamada do Browser      http://localhost:8080/             ", "tags": "", "url": "routes.html#DefaultCallBack"},
     {"title": "routes.BaseURL", "text": "   ", "tags": "", "url": "routes.html#BaseURL"}
]};
